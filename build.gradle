import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
	id 'fabric-loom' version "${loom_version}"
	id 'maven-publish'
    id "org.jetbrains.kotlin.jvm" version "${kotlin_version}"
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
    maven { url = "https://maven.blamejared.com/" }
    maven { url = "https://maven.ladysnake.org/releases" }
    maven { url = "https://maven.shedaniel.me/" }
    maven { url = "https://maven.terraformersmc.com/releases" }
}

dependencies {
	minecraft "com.mojang:minecraft:$minecraft_version"
	mappings "net.fabricmc:yarn:$yarn_mappings"
	modImplementation "net.fabricmc:fabric-loader:$loader_version"
	modImplementation "net.fabricmc.fabric-api:fabric-api:$fabric_api_version"
	modImplementation "net.fabricmc:fabric-language-kotlin:$fabric_kotlin_version"

	modImplementation("at.petra-k.hexcasting:hexcasting-fabric-$minecraft_version:$hexcasting_version") {
		exclude module: "phosphor"
		exclude module: "lithium"
		exclude module: "emi"
	}

    modApi "com.terraformersmc:modmenu:$modmenu_version"
	modLocalRuntime "dev.onyxstudios.cardinal-components-api:cardinal-components-api:$cardinal_components_version"
	modImplementation "me.shedaniel.cloth:cloth-config-fabric:$cloth_config_version"
	modLocalRuntime "com.samsthenerd.inline:inline-fabric:$minecraft_version-$inline_version"
	modImplementation "vazkii.patchouli:Patchouli:$minecraft_version-$patchouli_version-FABRIC"
	modLocalRuntime "at.petra-k.paucal:paucal-fabric-$minecraft_version:$paucal_version"
	modLocalRuntime files("${rootProject.rootDir}/libs/serialization-hooks-0.4.99999.jar")

    // HexDebug: The Splicing Table offers a casting interface which we should also account for.
    // If you wish not to test this in your development environment, you can remove this line.
    modLocalRuntime "gay.object.hexdebug:hexdebug-fabric:$hexdebug_version+$minecraft_version"
}

processResources {
	inputs.property "version", version
	filesMatching("fabric.mod.json") {
		expand "version": version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

tasks.withType(KotlinCompile).configureEach {
	kotlinOptions {
		jvmTarget = "17"
	}
}

java {
	withSourcesJar()
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}
